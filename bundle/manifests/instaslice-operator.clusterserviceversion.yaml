apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "inference.codeflare.dev/v1alpha1",
          "kind": "Instaslice",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "instaslice-operator",
              "app.kubernetes.io/instance": "instaslice-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "instaslice",
              "app.kubernetes.io/part-of": "instaslice-operator"
            },
            "name": "instaslice-sample"
          },
          "spec": null
        }
      ]
    capabilities: Basic Install
    categories: Drivers and plugins
    containerImage: <IMG>
    createdAt: "2024-10-08T20:07:36Z"
    description: InstaSlice works with GPU operator to create mig slices on demand
    operators.operatorframework.io/builder: operator-sdk-v1.34.1
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v4
    repository: https://github.com/openshift/instaslice-operator
    support: https://github.com/openshift/instaslice-operator/issues
  name: instaslice-operator.v0.0.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: Instaslice
      name: instaslices.inference.codeflare.dev
      version: v1alpha1
  description: |-
    ### Introduction
    InstaSlice works with GPU operator to create mig slices on demand.

    ### API Backward Compatibility
    **NOTE:**  Until Operator supports **seamless upgrades**, a new version of
    the operator may introduce a change that is **NOT** backwards compatible with
    the previous version. Thus, to upgrade the operator, uninstall the already
    installed version completely (including CRDs) and install the new version.
    For example to upgrade from 0.1.0 to 0.2.0, you must uninstall `0.1.0` by
    following [uninstall operator section](https://github.com/openshift/instaslice-operator)
    and install the new version.

    Changes to patch version (major.minor.patch) indicates that no breaking changes
    are introduced, thus upgrade can be done without uninstalling and reinstalling
    the operator.

    ### Documentation
    Documentation and installation guide can be found below:
      * [Installation Guide](https://github.com/openshift/instaslice-operator)
      * [Instaslice Operator](https://github.com/openshift/instaslice-operator/blob/main/README.md)

    ### License
    instaslice-operator is licensed under the Apache 2.0 license
  displayName: Instaslice
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - nodes/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - inference.codeflare.dev
          resources:
          - instaslices
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - inference.codeflare.dev
          resources:
          - instaslices/finalizers
          verbs:
          - update
        - apiGroups:
          - inference.codeflare.dev
          resources:
          - instaslices/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        - apiGroups:
          - apps
          resources:
          - daemonsets
          verbs:
          - create
          - get
          - list
          - update
          - watch
          - patch
          - delete
        serviceAccountName: instaslice-operator-controller-manager
      deployments:
      - label:
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: instaslice-operator
          app.kubernetes.io/instance: controller-manager
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: deployment
          app.kubernetes.io/part-of: instaslice-operator
          control-plane: controller-manager
        name: instaslice-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                image: quay.io/amalvank/instaslicev2-controller:latest
                imagePullPolicy: Always
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                ports:
                - containerPort: 9443
                  name: webhook-server
                  protocol: TCP
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: true
                  capabilities:
                    drop:
                    - ALL
                volumeMounts:
                - mountPath: /tmp/k8s-webhook-server/serving-certs
                  name: cert
                  readOnly: true
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: false
              serviceAccountName: instaslice-operator-controller-manager
              terminationGracePeriodSeconds: 10
              volumes:
              - name: cert
                secret:
                  secretName: webhook-server-cert
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: instaslice-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - GPU
  - MIG
  links:
  - name: Instaslice Operator
    url: https://github.com/openshift/instaslice-operator
  maintainers:
  - email: amalvank@redhat.com
    name: Abhishek Malvankar
  - email: mmunirab@redhat.com
    name: Mohammed Abdi
  maturity: alpha
  minKubeVersion: 1.16.0
  provider:
    name: Codeflare
    url: https://github.com/openshift/instaslice-operator
  version: 0.0.0
  webhookdefinitions:
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: instaslice-operator-controller-manager
    failurePolicy: Fail
    generateName: instaslice.codeflare.dev
    rules:
    - apiGroups:
      - ""
      apiVersions:
      - v1
      operations:
      - CREATE
      resources:
      - pods
    sideEffects: None
    targetPort: 9443
    type: MutatingAdmissionWebhook
    webhookPath: /mutate-v1-pod
